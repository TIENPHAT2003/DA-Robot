# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\UI\Kinematics.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Storage_Signal import signal
from Recipe_Kinematics import Inverse_Kinematics

min = [-60,-30,-150,-90]
max =[60,90,90,90]
min_pos = [100,-150, -10]
max_pos = [350, 150, 300]
class Ui_Kinematics(object):
    def setupUi(self, Kinematics):
        self.F_Kinematics = QtWidgets.QFrame(Kinematics)
        self.F_Kinematics.setGeometry(QtCore.QRect(10, 119, 1041, 531)) #10, 119
        self.F_Kinematics.setStyleSheet("")
        self.F_Kinematics.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.F_Kinematics.setFrameShadow(QtWidgets.QFrame.Raised)
        self.F_Kinematics.setObjectName("F_Kinematics")
        self.F_Forward_Kinematics = QtWidgets.QFrame(self.F_Kinematics)
        self.F_Forward_Kinematics.setGeometry(QtCore.QRect(10, 20, 501, 511))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.F_Forward_Kinematics.setFont(font)
        self.F_Forward_Kinematics.setStyleSheet("QFrame{\n"
"    border: 2px solid;\n"
"    border-radius: 20px;\n"
"    background-color: rgb(240, 240, 240);\n"
"}")
        self.F_Forward_Kinematics.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.F_Forward_Kinematics.setFrameShadow(QtWidgets.QFrame.Raised)
        self.F_Forward_Kinematics.setObjectName("F_Forward_Kinematics")
        self.L_FK_Theta1 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.L_FK_Theta1.setGeometry(QtCore.QRect(20, 30, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_FK_Theta1.setFont(font)
        self.L_FK_Theta1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_FK_Theta1.setObjectName("L_FK_Theta1")
        self.S_FK_Theta1 = QtWidgets.QSlider(self.F_Forward_Kinematics)
        self.S_FK_Theta1.setGeometry(QtCore.QRect(30, 70, 441, 41))
        self.S_FK_Theta1.setOrientation(QtCore.Qt.Horizontal)
        self.S_FK_Theta1.setObjectName("S_FK_Theta1")
        self.S_FK_Theta1.setMinimum(min[0])
        self.S_FK_Theta1.setMaximum(max[0])

        self.S_FK_Theta2 = QtWidgets.QSlider(self.F_Forward_Kinematics)
        self.S_FK_Theta2.setGeometry(QtCore.QRect(30, 180, 441, 41))
        self.S_FK_Theta2.setOrientation(QtCore.Qt.Horizontal)
        self.S_FK_Theta2.setObjectName("S_FK_Theta2")
        self.S_FK_Theta2.setMinimum(min[1])
        self.S_FK_Theta2.setMaximum(max[1])
        self.L_FK_Theta2 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.L_FK_Theta2.setGeometry(QtCore.QRect(20, 140, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_FK_Theta2.setFont(font)
        self.L_FK_Theta2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_FK_Theta2.setObjectName("L_FK_Theta2")
        self.S_FK_Theta3 = QtWidgets.QSlider(self.F_Forward_Kinematics)
        self.S_FK_Theta3.setGeometry(QtCore.QRect(30, 290, 441, 41))
        self.S_FK_Theta3.setOrientation(QtCore.Qt.Horizontal)
        self.S_FK_Theta3.setObjectName("S_FK_Theta3")
        self.S_FK_Theta3.setMinimum(min[2])
        self.S_FK_Theta3.setMaximum(max[2])
        self.L_FK_Theta3 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.L_FK_Theta3.setGeometry(QtCore.QRect(20, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_FK_Theta3.setFont(font)
        self.L_FK_Theta3.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_FK_Theta3.setObjectName("L_FK_Theta3")
        self.S_FK_Theta = QtWidgets.QSlider(self.F_Forward_Kinematics)
        self.S_FK_Theta.setGeometry(QtCore.QRect(30, 390, 441, 41))
        self.S_FK_Theta.setOrientation(QtCore.Qt.Horizontal)
        self.S_FK_Theta.setObjectName("S_FK_Theta")
        self.S_FK_Theta.setMinimum(min[3])
        self.S_FK_Theta.setMaximum(max[3])
        self.L_FK_Theta = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.L_FK_Theta.setGeometry(QtCore.QRect(20, 350, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_FK_Theta.setFont(font)
        self.L_FK_Theta.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_FK_Theta.setObjectName("L_FK_Theta")
        self.L_FK_Theta4 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.L_FK_Theta4.setGeometry(QtCore.QRect(110, 450, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_FK_Theta4.setFont(font)
        self.L_FK_Theta4.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_FK_Theta4.setObjectName("L_FK_Theta4")
        self.LE_FK_Theta1 = QtWidgets.QLineEdit(self.F_Forward_Kinematics)
        self.LE_FK_Theta1.setGeometry(QtCore.QRect(110, 30, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_FK_Theta1.setFont(font)
        self.LE_FK_Theta1.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_FK_Theta1.setObjectName("LE_FK_Theta1")
        self.LE_FK_Theta1.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_FK_Theta2 = QtWidgets.QLineEdit(self.F_Forward_Kinematics)
        self.LE_FK_Theta2.setGeometry(QtCore.QRect(110, 140, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_FK_Theta2.setFont(font)
        self.LE_FK_Theta2.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_FK_Theta2.setObjectName("LE_FK_Theta2")
        self.LE_FK_Theta2.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_FK_Theta3 = QtWidgets.QLineEdit(self.F_Forward_Kinematics)
        self.LE_FK_Theta3.setGeometry(QtCore.QRect(110, 250, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_FK_Theta3.setFont(font)
        self.LE_FK_Theta3.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_FK_Theta3.setObjectName("LE_FK_Theta3")
        self.LE_FK_Theta3.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_FK_Theta = QtWidgets.QLineEdit(self.F_Forward_Kinematics)
        self.LE_FK_Theta.setGeometry(QtCore.QRect(100, 350, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_FK_Theta.setFont(font)
        self.LE_FK_Theta.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_FK_Theta.setObjectName("LE_FK_Theta")
        self.LE_FK_Theta.setAlignment(QtCore.Qt.AlignCenter)
        self.MM_FK_Theta1 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.MM_FK_Theta1.setGeometry(QtCore.QRect(370, 30, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.MM_FK_Theta1.setFont(font)
        self.MM_FK_Theta1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.MM_FK_Theta1.setAlignment(QtCore.Qt.AlignCenter)
        self.MM_FK_Theta1.setObjectName("MM_FK_Theta1")
        self.MM_FK_Theta2 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.MM_FK_Theta2.setGeometry(QtCore.QRect(370, 140, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.MM_FK_Theta2.setFont(font)
        self.MM_FK_Theta2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.MM_FK_Theta2.setAlignment(QtCore.Qt.AlignCenter)
        self.MM_FK_Theta2.setObjectName("MM_FK_Theta2")
        self.MM_FK_Theta3 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.MM_FK_Theta3.setGeometry(QtCore.QRect(370, 250, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.MM_FK_Theta3.setFont(font)
        self.MM_FK_Theta3.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.MM_FK_Theta3.setAlignment(QtCore.Qt.AlignCenter)
        self.MM_FK_Theta3.setObjectName("MM_FK_Theta3")
        self.MM_FK_Theta = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.MM_FK_Theta.setGeometry(QtCore.QRect(370, 350, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.MM_FK_Theta.setFont(font)
        self.MM_FK_Theta.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.MM_FK_Theta.setAlignment(QtCore.Qt.AlignCenter)
        self.MM_FK_Theta.setObjectName("MM_FK_Theta")
        self.I_FK_Theta4 = QtWidgets.QLabel(self.F_Forward_Kinematics)
        self.I_FK_Theta4.setGeometry(QtCore.QRect(210, 450, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_FK_Theta4.setFont(font)
        self.I_FK_Theta4.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_FK_Theta4.setAlignment(QtCore.Qt.AlignCenter)
        self.I_FK_Theta4.setObjectName("I_FK_Theta4")
        self.F_Inverse_Kinematics = QtWidgets.QFrame(self.F_Kinematics)
        self.F_Inverse_Kinematics.setGeometry(QtCore.QRect(540, 20, 491, 511))
        self.F_Inverse_Kinematics.setStyleSheet("QFrame{\n"
"    border: 2px solid;\n"
"    border-radius: 20px;\n"
"    background-color: rgb(240, 240, 240);\n"
"}")
        self.F_Inverse_Kinematics.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.F_Inverse_Kinematics.setFrameShadow(QtWidgets.QFrame.Raised)
        self.F_Inverse_Kinematics.setObjectName("F_Inverse_Kinematics")
        self.L_IK_Px = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Px.setGeometry(QtCore.QRect(60, 70, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Px.setFont(font)
        self.L_IK_Px.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Px.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Px.setObjectName("L_IK_Px")
        self.L_IK_Py = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Py.setGeometry(QtCore.QRect(180, 70, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Py.setFont(font)
        self.L_IK_Py.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Py.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Py.setObjectName("L_IK_Py")
        self.L_IK_Pz = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Pz.setGeometry(QtCore.QRect(290, 70, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Pz.setFont(font)
        self.L_IK_Pz.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Pz.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Pz.setObjectName("L_IK_Pz")
        self.L_IK_Theta = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta.setGeometry(QtCore.QRect(380, 70, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta.setFont(font)
        self.L_IK_Theta.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta.setObjectName("L_IK_Theta")
        self.LE_IK_Px = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_IK_Px.setGeometry(QtCore.QRect(40, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_IK_Px.setFont(font)
        self.LE_IK_Px.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_IK_Px.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_IK_Px.setObjectName("LE_IK_Px")
        self.LE_IK_Px.setPlaceholderText("0")
        self.LE_IK_Py = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_IK_Py.setGeometry(QtCore.QRect(160, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_IK_Py.setFont(font)
        self.LE_IK_Py.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_IK_Py.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_IK_Py.setObjectName("LE_IK_Py")
        self.LE_IK_Py.setPlaceholderText("0")
        self.LE_IK_Pz = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_IK_Pz.setGeometry(QtCore.QRect(270, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_IK_Pz.setFont(font)
        self.LE_IK_Pz.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_IK_Pz.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_IK_Pz.setObjectName("LE_IK_Pz")
        self.LE_IK_Pz.setPlaceholderText("0")
        self.LE_IK_Theta = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_IK_Theta.setGeometry(QtCore.QRect(380, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_IK_Theta.setFont(font)
        self.LE_IK_Theta.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 5px;\n"
"    background-color: white;\n"
"}")
        self.LE_IK_Theta.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_IK_Theta.setObjectName("LE_IK_Theta")
        self.LE_IK_Theta.setPlaceholderText("0")
        self.line_Pos_Set1 = QtWidgets.QFrame(self.F_Inverse_Kinematics)
        self.line_Pos_Set1.setGeometry(QtCore.QRect(0, 150, 491, 3))
        self.line_Pos_Set1.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_Pos_Set1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_Pos_Set1.setObjectName("line_Pos_Set1")
        self.L_IK_Theta1_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta1_1.setGeometry(QtCore.QRect(40, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta1_1.setFont(font)
        self.L_IK_Theta1_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta1_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta1_1.setObjectName("L_IK_Theta1_1")
        self.L_IK_Position = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Position.setGeometry(QtCore.QRect(180, 15, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Position.setFont(font)
        self.L_IK_Position.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.L_IK_Position.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Position.setObjectName("L_IK_Position")
        self.L_IK_Set1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Set1.setGeometry(QtCore.QRect(180, 170, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Set1.setFont(font)
        self.L_IK_Set1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.L_IK_Set1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Set1.setObjectName("L_IK_Set1")
        self.L_IK_Theta2_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta2_1.setGeometry(QtCore.QRect(160, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta2_1.setFont(font)
        self.L_IK_Theta2_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta2_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta2_1.setObjectName("L_IK_Theta2_1")
        self.L_IK_Theta3_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta3_1.setGeometry(QtCore.QRect(270, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta3_1.setFont(font)
        self.L_IK_Theta3_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta3_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta3_1.setObjectName("L_IK_Theta3_1")
        self.L_IK_Theta4_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta4_1.setGeometry(QtCore.QRect(380, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta4_1.setFont(font)
        self.L_IK_Theta4_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta4_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta4_1.setObjectName("L_IK_Theta4_1")
        self.line_Set1_Set2 = QtWidgets.QFrame(self.F_Inverse_Kinematics)
        self.line_Set1_Set2.setGeometry(QtCore.QRect(0, 295, 491, 3))
        self.line_Set1_Set2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_Set1_Set2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_Set1_Set2.setObjectName("line_Set1_Set2")
        self.L_IK_Theta2_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta2_2.setGeometry(QtCore.QRect(160, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta2_2.setFont(font)
        self.L_IK_Theta2_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta2_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta2_2.setObjectName("L_IK_Theta2_2")
        self.L_IK_Theta4_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta4_2.setGeometry(QtCore.QRect(380, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta4_2.setFont(font)
        self.L_IK_Theta4_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta4_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta4_2.setObjectName("L_IK_Theta4_2")
        self.L_IK_Theta3_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta3_2.setGeometry(QtCore.QRect(270, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta3_2.setFont(font)
        self.L_IK_Theta3_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta3_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta3_2.setObjectName("L_IK_Theta3_2")
        self.L_IK_Theta1_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Theta1_2.setGeometry(QtCore.QRect(40, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Theta1_2.setFont(font)
        self.L_IK_Theta1_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_IK_Theta1_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Theta1_2.setObjectName("L_IK_Theta1_2")
        self.L_IK_Set2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_IK_Set2.setGeometry(QtCore.QRect(180, 310, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.L_IK_Set2.setFont(font)
        self.L_IK_Set2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.L_IK_Set2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_IK_Set2.setObjectName("L_IK_Set2")
        self.line_Set2_Run = QtWidgets.QFrame(self.F_Inverse_Kinematics)
        self.line_Set2_Run.setGeometry(QtCore.QRect(0, 440, 491, 3))
        self.line_Set2_Run.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_Set2_Run.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_Set2_Run.setObjectName("line_Set2_Run")
        self.CB_IK_Set = QtWidgets.QComboBox(self.F_Inverse_Kinematics)
        self.CB_IK_Set.setGeometry(QtCore.QRect(378, 460, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.CB_IK_Set.setStyleSheet("""
            QComboBox{
                font: 20px Bold "Century";
                border:1px solid;
                border-radius:0px;
            }                             
            QComboBox QAbstractItemView{
            border: 1px solid;
            border-radius: none;
        }
""")
        self.CB_IK_Set.setFrame(False)
        self.CB_IK_Set.setFont(font)
        self.CB_IK_Set.setObjectName("CB_IK_Set")
        self.CB_IK_Set.addItem("")
        self.CB_IK_Set.addItem("")
        self.B_Calculate = QtWidgets.QPushButton(self.F_Inverse_Kinematics)
        self.B_Calculate.setGeometry(QtCore.QRect(30, 455, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Courier")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.B_Calculate.setFont(font)
        self.B_Calculate.setStyleSheet("QPushButton{    \n"
"    background-color: #0D706E;\n"
"    border: 2px solid 0CEEFFA;\n"
"    color: #CEEFFA;\n"
"    border-top-color: rgb(88, 88, 88);\n"
"    border-radius: 10px; \n"
"}")
        self.B_Calculate.setObjectName("B_Calculate")
        self.B_Run = QtWidgets.QPushButton(self.F_Inverse_Kinematics)
        self.B_Run.setGeometry(QtCore.QRect(205, 455, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Courier")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.B_Run.setFont(font)
        self.B_Run.setStyleSheet("QPushButton{    \n"
"    background-color: #0D706E;\n"
"    border: 2px solid 0CEEFFA;\n"
"    color: #CEEFFA;\n"
"    border-top-color: rgb(88, 88, 88);\n"
"    border-radius: 10px; \n"
"}")
        self.B_Run.setObjectName("B_Run")
        self.I_IK_Theta1_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta1_1.setGeometry(QtCore.QRect(40, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta1_1.setFont(font)
        self.I_IK_Theta1_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta1_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta1_1.setObjectName("I_IK_Theta1_1")
        self.I_IK_Theta2_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta2_1.setGeometry(QtCore.QRect(160, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta2_1.setFont(font)
        self.I_IK_Theta2_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta2_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta2_1.setObjectName("I_IK_Theta2_1")
        self.I_IK_Theta3_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta3_1.setGeometry(QtCore.QRect(270, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta3_1.setFont(font)
        self.I_IK_Theta3_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta3_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta3_1.setObjectName("I_IK_Theta3_1")
        self.I_IK_Theta4_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta4_1.setGeometry(QtCore.QRect(380, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta4_1.setFont(font)
        self.I_IK_Theta4_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta4_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta4_1.setObjectName("I_IK_Theta4_1")
        self.I_IK_Theta1_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta1_2.setGeometry(QtCore.QRect(40, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta1_2.setFont(font)
        self.I_IK_Theta1_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta1_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta1_2.setObjectName("I_IK_Theta1_2")
        self.I_IK_Theta3_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta3_2.setGeometry(QtCore.QRect(270, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta3_2.setFont(font)
        self.I_IK_Theta3_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta3_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta3_2.setObjectName("I_IK_Theta3_2")
        self.I_IK_Theta2_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta2_2.setGeometry(QtCore.QRect(160, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta2_2.setFont(font)
        self.I_IK_Theta2_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta2_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta2_2.setObjectName("I_IK_Theta2_2")
        self.I_IK_Theta4_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_IK_Theta4_2.setGeometry(QtCore.QRect(380, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_IK_Theta4_2.setFont(font)
        self.I_IK_Theta4_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_IK_Theta4_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_IK_Theta4_2.setObjectName("I_IK_Theta4_2")
        self.L_IK_Theta4_2.raise_()
        self.L_IK_Px.raise_()
        self.L_IK_Py.raise_()
        self.L_IK_Pz.raise_()
        self.L_IK_Theta.raise_()
        self.LE_IK_Px.raise_()
        self.LE_IK_Py.raise_()
        self.LE_IK_Pz.raise_()
        self.LE_IK_Theta.raise_()
        self.line_Pos_Set1.raise_()
        self.L_IK_Theta1_1.raise_()
        self.L_IK_Position.raise_()
        self.L_IK_Set1.raise_()
        self.L_IK_Theta2_1.raise_()
        self.L_IK_Theta3_1.raise_()
        self.L_IK_Theta4_1.raise_()
        self.line_Set1_Set2.raise_()
        self.L_IK_Theta2_2.raise_()
        self.L_IK_Theta3_2.raise_()
        self.L_IK_Theta1_2.raise_()
        self.L_IK_Set2.raise_()
        self.line_Set2_Run.raise_()
        self.CB_IK_Set.raise_()
        self.B_Calculate.raise_()
        self.B_Run.raise_()
        self.I_IK_Theta1_1.raise_()
        self.I_IK_Theta2_1.raise_()
        self.I_IK_Theta3_1.raise_()
        self.I_IK_Theta4_1.raise_()
        self.I_IK_Theta1_2.raise_()
        self.I_IK_Theta3_2.raise_()
        self.I_IK_Theta2_2.raise_()
        self.I_IK_Theta4_2.raise_()
        self.B_Forward_Kinematics = QtWidgets.QPushButton(self.F_Kinematics)
        self.B_Forward_Kinematics.setGeometry(QtCore.QRect(30, 0, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.B_Forward_Kinematics.setFont(font)
        self.B_Forward_Kinematics.setStyleSheet("QPushButton{\n"
"    border: 2px solid;    \n"
"    background-color: rgb(240, 240, 240);\n"
"}")
        self.B_Forward_Kinematics.setObjectName("B_Forward_Kinematics")
        self.B_Inverse_Kinematics = QtWidgets.QPushButton(self.F_Kinematics)
        self.B_Inverse_Kinematics.setGeometry(QtCore.QRect(560, 0, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.B_Inverse_Kinematics.setFont(font)
        self.B_Inverse_Kinematics.setStyleSheet("QPushButton{\n"
"    border: 2px solid;    \n"
"    background-color: rgb(240, 240, 240);\n"
"}")
        self.B_Inverse_Kinematics.setObjectName("B_Inverse_Kinematics")

        self.Set_Event()
        self.retranslateUi(Kinematics)
        QtCore.QMetaObject.connectSlotsByName(Kinematics)

    def retranslateUi(self, Kinematics):
        _translate = QtCore.QCoreApplication.translate
        self.L_FK_Theta1.setText(_translate("Kinematics", "Theta1"))
        self.L_FK_Theta2.setText(_translate("Kinematics", "Theta2"))
        self.L_FK_Theta3.setText(_translate("Kinematics", "Theta3"))
        self.L_FK_Theta.setText(_translate("Kinematics", "Theta"))
        self.L_FK_Theta4.setText(_translate("Kinematics", "Theta4"))
        self.LE_FK_Theta1.setText(_translate("Kinematics", "0"))
        self.LE_FK_Theta2.setText(_translate("Kinematics", "0"))
        self.LE_FK_Theta3.setText(_translate("Kinematics", "0"))
        self.LE_FK_Theta.setText(_translate("Kinematics", "0"))
        self.MM_FK_Theta1.setText(_translate("Kinematics", f"{min[0]} ~ {max[0]}"))
        self.MM_FK_Theta2.setText(_translate("Kinematics", f"{min[1]} ~ {max[1]}"))
        self.MM_FK_Theta3.setText(_translate("Kinematics", f"{min[2]} ~ {max[2]}"))
        self.MM_FK_Theta.setText(_translate("Kinematics", f"{min[3]} ~ {max[3]}"))
        self.I_FK_Theta4.setText(_translate("Kinematics", "0"))
        self.L_IK_Px.setText(_translate("Kinematics", "Px"))
        self.L_IK_Py.setText(_translate("Kinematics", "Py"))
        self.L_IK_Pz.setText(_translate("Kinematics", "Pz"))
        self.L_IK_Theta.setText(_translate("Kinematics", "Theta"))
        self.LE_IK_Px.setText(_translate("Kinematics", ""))
        self.LE_IK_Py.setText(_translate("Kinematics", ""))
        self.LE_IK_Pz.setText(_translate("Kinematics", ""))
        self.LE_IK_Theta.setText(_translate("Kinematics", ""))
        self.L_IK_Theta1_1.setText(_translate("Kinematics", "Theta1"))
        self.L_IK_Position.setText(_translate("Kinematics", "Position"))
        self.L_IK_Set1.setText(_translate("Kinematics", "Set 1"))
        self.L_IK_Theta2_1.setText(_translate("Kinematics", "Theta2"))
        self.L_IK_Theta3_1.setText(_translate("Kinematics", "Theta3"))
        self.L_IK_Theta4_1.setText(_translate("Kinematics", "Theta4"))
        self.L_IK_Theta2_2.setText(_translate("Kinematics", "Theta2"))
        self.L_IK_Theta4_2.setText(_translate("Kinematics", "Theta4"))
        self.L_IK_Theta3_2.setText(_translate("Kinematics", "Theta3"))
        self.L_IK_Theta1_2.setText(_translate("Kinematics", "Theta1"))
        self.L_IK_Set2.setText(_translate("Kinematics", "Set 2"))
        self.CB_IK_Set.setItemText(0, _translate("Kinematics", "Set 1"))
        self.CB_IK_Set.setItemText(1, _translate("Kinematics", "Set 2"))
        self.B_Calculate.setText(_translate("Kinematics", "CALCULATE"))
        self.B_Run.setText(_translate("Kinematics", "RUN"))
        self.I_IK_Theta1_1.setText(_translate("Kinematics", "0"))
        self.I_IK_Theta2_1.setText(_translate("Kinematics", "0"))
        self.I_IK_Theta3_1.setText(_translate("Kinematics", "0"))
        self.I_IK_Theta4_1.setText(_translate("Kinematics", "0"))
        self.I_IK_Theta1_2.setText(_translate("Kinematics", "0"))
        self.I_IK_Theta3_2.setText(_translate("Kinematics", "0"))
        self.I_IK_Theta2_2.setText(_translate("Kinematics", "0"))
        self.I_IK_Theta4_2.setText(_translate("Kinematics", "0"))
        self.B_Forward_Kinematics.setText(_translate("Kinematics", "Forward Kinematics"))
        self.B_Inverse_Kinematics.setText(_translate("Kinematics", "Inverse Kinematics"))

#======================================================================
    def Set_Event(self):
        #region Enable
        signal.click_B_Reset.connect(self.Click_B_Reset)
        signal.click_B_Zero.connect(self.Click_B_Reset)
        signal.click_B_Home.connect(self.Click_B_Reset)

        self.F_Inverse_Kinematics.setEnabled(False)
        self.F_Forward_Kinematics.setEnabled(False)
        self.B_Forward_Kinematics.clicked.connect(self.Click_B_FK)
        self.B_Inverse_Kinematics.clicked.connect(self.Click_B_IK)
        signal.State_Com.connect(self.Update_State_Com)
        #endregion

        #region FK
        self.LE_FK_Theta1.editingFinished.connect(self.Finish_LE_FK_Theta1)
        self.LE_FK_Theta2.editingFinished.connect(self.Finish_LE_FK_Theta2)
        self.LE_FK_Theta3.editingFinished.connect(self.Finish_LE_FK_Theta3)
        self.LE_FK_Theta.editingFinished.connect(self.Finish_LE_FK_Theta)
        self.S_FK_Theta1.sliderReleased.connect(self.Change_S_FK_Theta1)
        self.S_FK_Theta2.sliderReleased.connect(self.Change_S_FK_Theta2)
        self.S_FK_Theta3.sliderReleased.connect(self.Change_S_FK_Theta3)
        self.S_FK_Theta.sliderReleased.connect(self.Change_S_FK_Theta)

        self.S_FK = [self.S_FK_Theta2, self.S_FK_Theta3, self.S_FK_Theta]
        #endregion

        #region IK
        self.LE_IK = [self.LE_IK_Px, self.LE_IK_Py, self.LE_IK_Pz, self.LE_IK_Theta]
        self.B_Calculate.clicked.connect(self.Click_B_Calculate)
        self.B_Run.clicked.connect(self.Click_B_Run)

        self.CB_IK_Set.setCurrentIndex(1)
        #endregion
#region Enable
    def Click_B_Reset(self):
        self.LE_FK_Theta1.setText("0")
        self.LE_FK_Theta2.setText("0")
        self.LE_FK_Theta3.setText("0")
        self.LE_FK_Theta.setText("0")
        self.LE_IK_Px.setText("")
        self.LE_IK_Py.setText("")
        self.LE_IK_Pz.setText("")
        self.LE_IK_Theta.setText("")
        self.S_FK_Theta1.setValue(0)
        self.S_FK_Theta2.setValue(0)
        self.S_FK_Theta3.setValue(0)
        self.S_FK_Theta.setValue(0)

    def Update_State_Com(self, data):
        if data:
            self.F_Forward_Kinematics.setEnabled(True)
            self.F_Inverse_Kinematics.setEnabled(False)
        else:
            self.F_Forward_Kinematics.setEnabled(False)
            self.F_Inverse_Kinematics.setEnabled(False)

    def Click_B_FK(self):
        self.F_Forward_Kinematics.setEnabled(True)
        self.F_Inverse_Kinematics.setEnabled(False)

    def Click_B_IK(self):
        self.F_Forward_Kinematics.setEnabled(False)
        self.F_Inverse_Kinematics.setEnabled(True)
#endregion

#region FK
    def Finish_LE_FK_Theta1(self):
        value = int(self.LE_FK_Theta1.text())
        self.S_FK_Theta1.setValue(value)
        signal.Data_FK_Theta1.emit(value)

    def Finish_LE_FK_Theta2(self):
        value = int(self.LE_FK_Theta2.text())
        self.S_FK_Theta2.setValue(value)
        signal.Data_FK_Theta2.emit(value)

    def Finish_LE_FK_Theta3(self):
        value = int(self.LE_FK_Theta3.text())
        self.S_FK_Theta3.setValue(value)
        signal.Data_FK_Theta3.emit(value)

    def Finish_LE_FK_Theta(self):
        value = int(self.LE_FK_Theta.text())
        self.S_FK_Theta.setValue(value)
        signal.Data_FK_Theta.emit(value)

    def Change_S_FK_Theta1(self):
        value = self.S_FK_Theta1.value()
        signal.Data_FK_Theta1.emit(value)
        self.LE_FK_Theta1.setText(str(value))

    def Change_S_FK_Theta2(self):
        min[3] = -90 + self.S_FK[1].value() + self.S_FK[0].value()
        max[3] = 90 + self.S_FK[1].value() + self.S_FK[0].value()
        self.S_FK_Theta.setMinimum(min[3])
        self.S_FK_Theta.setMaximum(max[3])
        self.MM_FK_Theta.setText(f"{min[3]} ~ {max[3]}")

        value = self.S_FK_Theta2.value()
        signal.Data_FK_Theta2.emit(value)
        self.LE_FK_Theta2.setText(str(value))
        self.I_FK_Theta4.setText(str(self.S_FK[2].value() - self.S_FK[1].value() - self.S_FK[0].value()))

    def Change_S_FK_Theta3(self):
        min[3] = -90 + self.S_FK[1].value() + self.S_FK[0].value()
        max[3] = 90 + self.S_FK[1].value() + self.S_FK[0].value()
        self.S_FK_Theta.setMinimum(min[3])
        self.S_FK_Theta.setMaximum(max[3])
        self.MM_FK_Theta.setText(f"{min[3]} ~ {max[3]}")

        value = self.S_FK_Theta3.value()
        signal.Data_FK_Theta3.emit(value)
        self.LE_FK_Theta3.setText(str(value))
        self.I_FK_Theta4.setText(str(self.S_FK[2].value() - self.S_FK[1].value() - self.S_FK[0].value()))

    def Change_S_FK_Theta(self):
        min[3] = -90 + self.S_FK[1].value() + self.S_FK[0].value()
        max[3] = 90 + self.S_FK[1].value() + self.S_FK[0].value()
        self.S_FK_Theta.setMinimum(min[3])
        self.S_FK_Theta.setMaximum(max[3])
        self.MM_FK_Theta.setText(f"{min[3]} ~ {max[3]}")
    
        value = self.S_FK_Theta.value()
        signal.Data_FK_Theta.emit(value)
        self.LE_FK_Theta.setText(str(value))
        self.I_FK_Theta4.setText(str(self.S_FK[2].value() - self.S_FK[1].value() - self.S_FK[0].value()))

#endregion

#region IK
    def Click_B_Calculate(self):
        numbers = []
        for le in self.LE_IK:
            text = le.text()
            try:
                number = float(text)  # Chuyển đổi thành số thực
                numbers.append(number)
            except ValueError:
                numbers.append(0)
        

        self.thetas = Inverse_Kinematics(numbers)
        self.I_IK_Theta1_1.setText(str(self.thetas[0][0]))
        self.I_IK_Theta2_1.setText(str(self.thetas[0][1]))
        self.I_IK_Theta3_1.setText(str(self.thetas[0][2]))
        self.I_IK_Theta4_1.setText(str(self.thetas[0][3]))
        self.I_IK_Theta1_2.setText(str(self.thetas[1][0]))
        self.I_IK_Theta2_2.setText(str(self.thetas[1][1]))
        self.I_IK_Theta3_2.setText(str(self.thetas[1][2]))
        self.I_IK_Theta4_2.setText(str(self.thetas[1][3]))

    def Click_B_Run(self):
        Set = self.CB_IK_Set.currentIndex()
        excute = True
        if self.thetas[Set][0] < min[0] or self.thetas[Set][0] > max[0]\
           or self.thetas[Set][1] < min[1] or self.thetas[Set][1] > max[1]\
           or self.thetas[Set][2] < min[2] or self.thetas[Set][2] > max[2]\
           or self.thetas[Set][3] < min[3] or self.thetas[Set][3] > max[3]:
            excute = False
        if excute:
            signal.Data_IK.emit(self.thetas[Set])
        else:
            message_box = QtWidgets.QMessageBox()
            message_box.setWindowTitle("Out of range")
            message_box.setWindowIcon(QtGui.QIcon("picture/error.png"))
            message_box.move(160, 340)

            message_box.setText(f"""
        Out range - You shout choose another Set or change Theta
        Theta1:{min[0]}  ~{max[0]}
        Theta2:{min[1]}  ~{max[1]}
        Theta3:{min[2]}  ~{max[2]}
        Theta4:{min[3]}  ~{max[3]}""")
            font = QtGui.QFont("Times New Roman", 12)
            message_box.setFont(font)
            
            message_box.exec_()
#endregion