# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\UI\Manipulation_Tragedy.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Recipe_Kinematics import Inverse_Kinematics
from Storage_Signal import signal

min = [-60,-30,-150,-90]
max =[60,90,90,90]
min_pos = [100,-150, -10]
max_pos = [350, 150, 300]


class Ui_Manipilation_Planning(object):
    def setupUi(self, Manipilation_Planning):
        self.F_Manipilation_Planning = QtWidgets.QFrame(Manipilation_Planning)
        self.F_Manipilation_Planning.setGeometry(QtCore.QRect(10, 120, 1041, 531))
        self.F_Manipilation_Planning.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.F_Manipilation_Planning.setFrameShadow(QtWidgets.QFrame.Raised)
        self.F_Manipilation_Planning.setObjectName("F_Manipilation_Planning")
        self.Position_list = QtWidgets.QListWidget(self.F_Manipilation_Planning)
        self.Position_list.setGeometry(QtCore.QRect(20, 50, 500, 431))
        self.Position_list.setStyleSheet("""
    QListWidget {
        background-color: rgb(240,240,240);  /* Màu nền của toàn bộ list */
    }
    QListWidget::item {
        background-color: #f0f0f0;  /* Màu nền của từng item */
        padding: 5px;
        margin: 2px;
    }
    QListWidget::item:selected {
        background-color: #CEEFFA;  /* Màu nền khi item được chọn */
        color: #0D706E;  /* Màu chữ khi item được chọn */
        background: transparent;
    }
    QListWidget::item:hover {
        background-color: #e0e0e0;  /* Màu nền khi di chuột qua */
    }
""")
        self.Position_list.setItemAlignment(QtCore.Qt.AlignLeading)
        self.Position_list.setObjectName("Position_list")
        self.F_Inverse_Kinematics = QtWidgets.QFrame(self.F_Manipilation_Planning)
        self.F_Inverse_Kinematics.setGeometry(QtCore.QRect(540, 10, 491, 511))
        self.F_Inverse_Kinematics.setStyleSheet("QFrame{\n"
"    border: 2px solid;\n"
"    border-radius: 20px;\n"
"    background-color: rgb(240, 240, 240);\n"
"}")
        self.F_Inverse_Kinematics.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.F_Inverse_Kinematics.setFrameShadow(QtWidgets.QFrame.Raised)
        self.F_Inverse_Kinematics.setObjectName("F_Inverse_Kinematics")
        self.L_Px = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Px.setGeometry(QtCore.QRect(60, 70, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Px.setFont(font)
        self.L_Px.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Px.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Px.setObjectName("L_Px")
        self.L_Py = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Py.setGeometry(QtCore.QRect(180, 70, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Py.setFont(font)
        self.L_Py.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Py.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Py.setObjectName("L_Py")
        self.L_Pz = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Pz.setGeometry(QtCore.QRect(290, 70, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Pz.setFont(font)
        self.L_Pz.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Pz.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Pz.setObjectName("L_Pz")
        self.L_Theta = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta.setGeometry(QtCore.QRect(380, 70, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta.setFont(font)
        self.L_Theta.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta.setObjectName("L_Theta")
        self.LE_Px = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_Px.setGeometry(QtCore.QRect(40, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_Px.setFont(font)
        self.LE_Px.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 10px;\n"
"    background-color: white;"
"}")
        self.LE_Px.setText("")
        self.LE_Px.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_Px.setObjectName("LE_Px")
        self.LE_Py = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_Py.setGeometry(QtCore.QRect(160, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_Py.setFont(font)
        self.LE_Py.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 10px;\n"
"    background-color: white;"
"}")
        self.LE_Py.setText("")
        self.LE_Py.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_Py.setObjectName("LE_Py")
        self.LE_Pz = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_Pz.setGeometry(QtCore.QRect(270, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.LE_Pz.setFont(font)
        self.LE_Pz.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 10px;\n"
"    background-color: white;"
"}")
        self.LE_Pz.setText("")
        self.LE_Pz.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_Pz.setObjectName("LE_Pz")
        self.LE_Theta = QtWidgets.QLineEdit(self.F_Inverse_Kinematics)
        self.LE_Theta.setGeometry(QtCore.QRect(380, 100, 80, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.LE_Theta.setFont(font)
        self.LE_Theta.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 10px;\n"
"    background-color: white;"
"}")
        self.LE_Theta.setText("")
        self.LE_Theta.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_Theta.setObjectName("LE_Theta")
        self.line_Pos_Set1 = QtWidgets.QFrame(self.F_Inverse_Kinematics)
        self.line_Pos_Set1.setGeometry(QtCore.QRect(0, 150, 491, 3))
        self.line_Pos_Set1.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_Pos_Set1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_Pos_Set1.setObjectName("line_Pos_Set1")
        self.L_Theta1_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta1_1.setGeometry(QtCore.QRect(40, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta1_1.setFont(font)
        self.L_Theta1_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta1_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta1_1.setObjectName("L_Theta1_1")
        self.L_Position = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Position.setGeometry(QtCore.QRect(180, 15, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.L_Position.setFont(font)
        self.L_Position.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.L_Position.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Position.setObjectName("L_Position")
        self.L_Set1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Set1.setGeometry(QtCore.QRect(180, 170, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.L_Set1.setFont(font)
        self.L_Set1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.L_Set1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Set1.setObjectName("L_Set1")
        self.L_Theta2_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta2_1.setGeometry(QtCore.QRect(160, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta2_1.setFont(font)
        self.L_Theta2_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta2_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta2_1.setObjectName("L_Theta2_1")
        self.L_Theta3_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta3_1.setGeometry(QtCore.QRect(270, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta3_1.setFont(font)
        self.L_Theta3_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta3_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta3_1.setObjectName("L_Theta3_1")
        self.L_Theta4_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta4_1.setGeometry(QtCore.QRect(380, 220, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta4_1.setFont(font)
        self.L_Theta4_1.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta4_1.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta4_1.setObjectName("L_Theta4_1")
        self.line_Set1_Set2 = QtWidgets.QFrame(self.F_Inverse_Kinematics)
        self.line_Set1_Set2.setGeometry(QtCore.QRect(0, 295, 491, 3))
        self.line_Set1_Set2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_Set1_Set2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_Set1_Set2.setObjectName("line_Set1_Set2")
        self.L_Theta2_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta2_2.setGeometry(QtCore.QRect(160, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta2_2.setFont(font)
        self.L_Theta2_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta2_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta2_2.setObjectName("L_Theta2_2")
        self.L_Theta4_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta4_2.setGeometry(QtCore.QRect(380, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta4_2.setFont(font)
        self.L_Theta4_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta4_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta4_2.setObjectName("L_Theta4_2")
        self.L_Theta3_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta3_2.setGeometry(QtCore.QRect(270, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta3_2.setFont(font)
        self.L_Theta3_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta3_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta3_2.setObjectName("L_Theta3_2")
        self.L_Theta1_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Theta1_2.setGeometry(QtCore.QRect(40, 360, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.L_Theta1_2.setFont(font)
        self.L_Theta1_2.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Theta1_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Theta1_2.setObjectName("L_Theta1_2")
        self.L_Set2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.L_Set2.setGeometry(QtCore.QRect(180, 310, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.L_Set2.setFont(font)
        self.L_Set2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.L_Set2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Set2.setObjectName("L_Set2")
        self.line_Set2_Run = QtWidgets.QFrame(self.F_Inverse_Kinematics)
        self.line_Set2_Run.setGeometry(QtCore.QRect(0, 440, 491, 3))
        self.line_Set2_Run.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_Set2_Run.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_Set2_Run.setObjectName("line_Set2_Run")
        self.CB_Set = QtWidgets.QComboBox(self.F_Inverse_Kinematics)
        self.CB_Set.setGeometry(QtCore.QRect(378, 460, 91, 31))
        self.CB_Set.setStyleSheet("""
            QComboBox{
                font: 20px Bold "Century";
                border:1px solid;
                border-radius:0px;
            }                             
            QComboBox QAbstractItemView{
            border: 1px solid;
            border-radius: none;
        }
""")
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.CB_Set.setFont(font)
        self.CB_Set.setObjectName("CB_Set")
        self.CB_Set.addItem("")
        self.CB_Set.addItem("")
        self.I_Theta1_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta1_1.setGeometry(QtCore.QRect(40, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta1_1.setFont(font)
        self.I_Theta1_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta1_1.setText("")
        self.I_Theta1_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta1_1.setObjectName("I_Theta1_1")
        self.I_Theta2_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta2_1.setGeometry(QtCore.QRect(160, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta2_1.setFont(font)
        self.I_Theta2_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta2_1.setText("")
        self.I_Theta2_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta2_1.setObjectName("I_Theta2_1")
        self.I_Theta3_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta3_1.setGeometry(QtCore.QRect(270, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta3_1.setFont(font)
        self.I_Theta3_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta3_1.setText("")
        self.I_Theta3_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta3_1.setObjectName("I_Theta3_1")
        self.I_Theta4_1 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta4_1.setGeometry(QtCore.QRect(380, 250, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta4_1.setFont(font)
        self.I_Theta4_1.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta4_1.setText("")
        self.I_Theta4_1.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta4_1.setObjectName("I_Theta4_1")
        self.I_Theta1_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta1_2.setGeometry(QtCore.QRect(40, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta1_2.setFont(font)
        self.I_Theta1_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta1_2.setText("")
        self.I_Theta1_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta1_2.setObjectName("I_Theta1_2")
        self.I_Theta3_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta3_2.setGeometry(QtCore.QRect(270, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta3_2.setFont(font)
        self.I_Theta3_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta3_2.setText("")
        self.I_Theta3_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta3_2.setObjectName("I_Theta3_2")
        self.I_Theta2_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta2_2.setGeometry(QtCore.QRect(160, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta2_2.setFont(font)
        self.I_Theta2_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta2_2.setText("")
        self.I_Theta2_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta2_2.setObjectName("I_Theta2_2")
        self.I_Theta4_2 = QtWidgets.QLabel(self.F_Inverse_Kinematics)
        self.I_Theta4_2.setGeometry(QtCore.QRect(380, 390, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.I_Theta4_2.setFont(font)
        self.I_Theta4_2.setStyleSheet("QLabel{\n"
"    border-radius: 10px;\n"
"}")
        self.I_Theta4_2.setText("")
        self.I_Theta4_2.setAlignment(QtCore.Qt.AlignCenter)
        self.I_Theta4_2.setObjectName("I_Theta4_2")
        self.B_M_Run = QtWidgets.QPushButton(self.F_Inverse_Kinematics)
        self.B_M_Run.setGeometry(QtCore.QRect(230, 455, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Courier")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.B_M_Run.setFont(font)
        self.B_M_Run.setStyleSheet("QPushButton{    \n"
"    background-color: #0D706E;\n"
"    border: 2px solid 0CEEFFA;\n"
"    color: #CEEFFA;\n"
"    border-top-color: rgb(88, 88, 88);\n"
"    border-radius: 10px; \n"
"}")
        self.B_M_Run.setObjectName("B_M_Run")
        self.B_Calculate = QtWidgets.QPushButton(self.F_Inverse_Kinematics)
        self.B_Calculate.setGeometry(QtCore.QRect(30, 455, 171, 41))
        font = QtGui.QFont()
        font.setFamily("Courier")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.B_Calculate.setFont(font)
        self.B_Calculate.setStyleSheet("QPushButton{    \n"
"    background-color: #0D706E;\n"
"    border: 2px solid 0CEEFFA;\n"
"    color: #CEEFFA;\n"
"    border-top-color: rgb(88, 88, 88);\n"
"    border-radius: 10px; \n"
"}")
        self.B_Calculate.setObjectName("B_Calculate")
        self.L_Theta4_2.raise_()
        self.L_Px.raise_()
        self.L_Py.raise_()
        self.L_Pz.raise_()
        self.L_Theta.raise_()
        self.LE_Px.raise_()
        self.LE_Py.raise_()
        self.LE_Pz.raise_()
        self.LE_Theta.raise_()
        self.line_Pos_Set1.raise_()
        self.L_Theta1_1.raise_()
        self.L_Position.raise_()
        self.L_Set1.raise_()
        self.L_Theta2_1.raise_()
        self.L_Theta3_1.raise_()
        self.L_Theta4_1.raise_()
        self.line_Set1_Set2.raise_()
        self.L_Theta2_2.raise_()
        self.L_Theta3_2.raise_()
        self.L_Theta1_2.raise_()
        self.L_Set2.raise_()
        self.line_Set2_Run.raise_()
        self.CB_Set.raise_()
        self.I_Theta1_1.raise_()
        self.I_Theta2_1.raise_()
        self.I_Theta3_1.raise_()
        self.I_Theta4_1.raise_()
        self.I_Theta1_2.raise_()
        self.I_Theta3_2.raise_()
        self.I_Theta2_2.raise_()
        self.I_Theta4_2.raise_()
        self.B_M_Run.raise_()
        self.B_Calculate.raise_()
        self.L_Position_2 = QtWidgets.QLabel(self.F_Manipilation_Planning)
        self.L_Position_2.setGeometry(QtCore.QRect(30, 10, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.L_Position_2.setFont(font)
        self.L_Position_2.setStyleSheet("QLabel{\n"
"    background-color :rgb(240,240,240);\n"
"}")
        self.L_Position_2.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Position_2.setObjectName("L_Position_2")
        self.B_Minus = QtWidgets.QPushButton(self.F_Manipilation_Planning)
        self.B_Minus.setGeometry(QtCore.QRect(130, 490, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Courier")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.B_Minus.setFont(font)
        self.B_Minus.setStyleSheet("QPushButton{    \n"
"    background-color: #0D706E;\n"
"    border: 2px solid 0CEEFFA;\n"
"    color: #CEEFFA;\n"
"    border-top-color: rgb(88, 88, 88);\n"
"    border-radius: 10px; \n"
"}")
        self.B_Minus.setObjectName("B_Minus")
        self.B_Add = QtWidgets.QPushButton(self.F_Manipilation_Planning)
        self.B_Add.setGeometry(QtCore.QRect(20, 490, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Courier")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.B_Add.setFont(font)
        self.B_Add.setStyleSheet("QPushButton{    \n"
"    background-color: #0D706E;\n"
"    border: 2px solid 0CEEFFA;\n"
"    color: #CEEFFA;\n"
"    border-top-color: rgb(88, 88, 88);\n"
"    border-radius: 10px; \n"
"}")
        self.B_Add.setObjectName("B_Add")
        self.LE_Time = QtWidgets.QLineEdit(self.F_Manipilation_Planning)
        self.LE_Time.setGeometry(QtCore.QRect(420, 490, 80, 41))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        self.LE_Time.setFont(font)
        self.LE_Time.setStyleSheet("QLineEdit{\n"
"    border: 1px solid;\n"
"    border-radius: 10px;\n"
"    background-color: white;\n"
"}")
        self.LE_Time.setText("")
        self.LE_Time.setAlignment(QtCore.Qt.AlignCenter)
        self.LE_Time.setObjectName("LE_Time")
        self.L_Time = QtWidgets.QLabel(self.F_Manipilation_Planning)
        self.L_Time.setGeometry(QtCore.QRect(340, 490, 71, 41))
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        self.L_Time.setFont(font)
        self.L_Time.setStyleSheet("QLabel{\n"
"    border :none;\n"
"}")
        self.L_Time.setAlignment(QtCore.Qt.AlignCenter)
        self.L_Time.setObjectName("L_Time")
        self.CB_Drag_Drop = QtWidgets.QComboBox(self.F_Manipilation_Planning)
        self.CB_Drag_Drop.setGeometry(QtCore.QRect(240, 490, 91, 41))
        self.CB_Drag_Drop.setStyleSheet("""
            QComboBox{
                font: 20px Bold "Century";
                border:1px solid;
                border-radius:0px;
            }                             
            QComboBox QAbstractItemView{
            border: 1px solid;
            border-radius: none;
        }
""")
        font = QtGui.QFont()
        font.setFamily("Century")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.CB_Drag_Drop.setFont(font)
        self.CB_Drag_Drop.setObjectName("CB_Drag_Drop")
        self.CB_Drag_Drop.addItem("")
        self.CB_Drag_Drop.addItem("")



        self.SetEvent()
        self.retranslateUi(Manipilation_Planning)
        QtCore.QMetaObject.connectSlotsByName(Manipilation_Planning)

    def retranslateUi(self, Manipilation_Planning):
        _translate = QtCore.QCoreApplication.translate
        Manipilation_Planning.setWindowTitle(_translate("Manipilation_Planning", "Form"))
        self.L_Px.setText(_translate("Manipilation_Planning", "Px"))
        self.L_Py.setText(_translate("Manipilation_Planning", "Py"))
        self.L_Pz.setText(_translate("Manipilation_Planning", "Pz"))
        self.L_Theta.setText(_translate("Manipilation_Planning", "Theta"))
        self.L_Theta1_1.setText(_translate("Manipilation_Planning", "Theta1"))
        self.L_Position.setText(_translate("Manipilation_Planning", "Position"))
        self.L_Set1.setText(_translate("Manipilation_Planning", "Set 1"))
        self.L_Theta2_1.setText(_translate("Manipilation_Planning", "Theta2"))
        self.L_Theta3_1.setText(_translate("Manipilation_Planning", "Theta3"))
        self.L_Theta4_1.setText(_translate("Manipilation_Planning", "Theta4"))
        self.L_Theta2_2.setText(_translate("Manipilation_Planning", "Theta2"))
        self.L_Theta4_2.setText(_translate("Manipilation_Planning", "Theta4"))
        self.L_Theta3_2.setText(_translate("Manipilation_Planning", "Theta3"))
        self.L_Theta1_2.setText(_translate("Manipilation_Planning", "Theta1"))
        self.L_Set2.setText(_translate("Manipilation_Planning", "Set 2"))
        self.CB_Set.setItemText(0, _translate("Manipilation_Planning", "Set 1"))
        self.CB_Set.setItemText(1, _translate("Manipilation_Planning", "Set 2"))
        self.B_M_Run.setText(_translate("Manipilation_Planning", "RUN"))
        self.B_Calculate.setText(_translate("Manipilation_Planning", "CALCULATE"))
        self.L_Position_2.setText(_translate("Manipilation_Planning", "Positions"))
        self.B_Minus.setText(_translate("Manipilation_Planning", "MINUS"))
        self.B_Add.setText(_translate("Manipilation_Planning", "ADD"))
        self.L_Time.setText(_translate("Manipilation_Planning", "Time"))
        self.CB_Drag_Drop.setItemText(0, _translate("Manipilation_Planning", "Drop"))
        self.CB_Drag_Drop.setItemText(1, _translate("Manipilation_Planning", "Drag"))


#==================================================================================
    def SetEvent(self):
        self.run = True
        self.number_value = 0
        self.non_click = True
        self.number_running = 0
        self.open = False
        self.LE_Time.setText("1")

        self.CB_Set.setCurrentIndex(1)

        self.LE = [self.LE_Px, self.LE_Py, self.LE_Pz, self.LE_Theta]
        
        self.B_Add.clicked.connect(self.Click_B_Add)
        self.B_Minus.clicked.connect(self.Click_B_Minus)
        self.B_Calculate.clicked.connect(self.Click_B_Calculate)
        self.B_M_Run.clicked.connect(self.Click_Run)
        signal.Run_OK.connect(self.Run_MP)
        signal.click_B_Pause_Run.connect(self.Click_B_Pause_Run)
        signal.click_B_Switch.connect(self.Click_B_Switch)
        


    def Click_B_Calculate(self):
        numbers = []
        for le in self.LE:
            text = le.text()
            try:
                number = float(text)  # Chuyển đổi thành số thực
                numbers.append(number)
            except ValueError:
                numbers.append(0)
        
        self.thetas = Inverse_Kinematics(numbers)
        self.I_Theta1_1.setText(str(self.thetas[0][0]))
        self.I_Theta2_1.setText(str(self.thetas[0][1]))
        self.I_Theta3_1.setText(str(self.thetas[0][2]))
        self.I_Theta4_1.setText(str(self.thetas[0][3]))
        self.I_Theta1_2.setText(str(self.thetas[1][0]))
        self.I_Theta2_2.setText(str(self.thetas[1][1]))
        self.I_Theta3_2.setText(str(self.thetas[1][2]))
        self.I_Theta4_2.setText(str(self.thetas[1][3]))

        self.non_click = False

    def Click_B_Switch(self, data):
        if data == 2:
            self.open = True
        else:
            self.open = False

    def Click_B_Add(self):
        Set = self.CB_Set.currentIndex()

        if self.non_click:
            self.Click_B_Calculate()
            self.non_click = True
            

        try:
            if self.thetas[Set][0] < min[0] or self.thetas[Set][0] > max[0]\
            or self.thetas[Set][1] < min[1] or self.thetas[Set][1] > max[1]\
            or self.thetas[Set][2] < min[2] or self.thetas[Set][2] > max[2]\
            or self.thetas[Set][3] < min[3] or self.thetas[Set][3] > max[3]:
                message_box = QtWidgets.QMessageBox()
                message_box.setWindowTitle("Out of range")
                message_box.setWindowIcon(QtGui.QIcon("picture/error.png"))
                message_box.move(160, 340)

                message_box.setText(f"""
            Out range - You shout choose another Set or change Theta
            Theta1:{min[0]}  ~{max[0]}
            Theta2:{min[1]}  ~{max[1]}
            Theta3:{min[2]}  ~{max[2]}
            Theta4:{min[3]}  ~{max[3]}""")
                font = QtGui.QFont("Times New Roman", 12)
                message_box.setFont(font)
                
                message_box.exec_()
            else:
                
                # Tạo chuỗi format theo yêu cầu
                item = QtWidgets.QListWidgetItem\
                    (f"Value: [{self.LE[0].text()},{self.LE[1].text()},{self.LE[2].text()},{self.LE[3].text()}] ~ [{self.thetas[Set][0]},{self.thetas[Set][1]},{self.thetas[Set][2]},{self.thetas[Set][3]},{int(self.LE_Time.text())*1000},{self.CB_Drag_Drop.currentText()}]")
                font = QtGui.QFont("Times New Roman", 15, QtGui.QFont.Bold)  # Đặt font: Arial, cỡ 16, in đậm
                item.setFont(font)  # Áp dụng font cho item
                # Thêm vào list
                self.Position_list.addItem(item)
        except:
            message_box = QtWidgets.QMessageBox()
            message_box.setWindowTitle("Out of range")
            message_box.setWindowIcon(QtGui.QIcon("picture/error.png"))
            message_box.move(160, 340)

            message_box.setText(f"""You should calculate and choose the set before adding it.""")
            font = QtGui.QFont("Times New Roman", 12)
            message_box.setFont(font)
            
            message_box.exec_()

    def Click_B_Minus(self):
        # Lấy item đang được chọn
        current_item = self.Position_list.currentItem()
        
        # Kiểm tra nếu có item được chọn thì xóa
        if current_item is not None:
            # Lấy row của item đang chọn
            row = self.Position_list.row(current_item)
            # Xóa item tại row đó
            self.Position_list.takeItem(row)
 
    def Click_Run(self):
        self.number_running = 0
        self.Run_MP()

    def Run_MP(self):
        if self.run and self.open:
            if(self.number_running == self.Position_list.count()):
                self.number_running = 0

            input_string = self.Position_list.item(self.number_running).text()
            
            signal.Data_MP.emit(input_string)

            self.number_running += 1

    def Click_B_Pause_Run(self, data):
        self.run = not data
        if self.run:
            self.Run_MP()
    

